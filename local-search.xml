<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>初学者前端入门路线</title>
    <link href="/2022/03/04/article-1/"/>
    <url>/2022/03/04/article-1/</url>
    
    <content type="html"><![CDATA[<p>前端学习路线图和资源自己找上门来，快来收藏！！！<br><img src="/./images/v2-54b23630f61e3f19acbe7089c8ccb1bf_720w.jpg" alt="前端学习路线图"></p><p>| HTML+CSS–&gt;移动 web-&gt;JavaScript 基础–&gt;Web APIs-&gt;数据交互&amp;异步编程–&gt;Node.js–&gt;Vue2+Vue3–&gt;React 核心技术–&gt;微信小程序</p><h2 id="第一阶段：基础入门"><a href="#第一阶段：基础入门" class="headerlink" title="第一阶段：基础入门"></a>第一阶段：基础入门</h2><p><a href="https://www.bilibili.com/video/BV1Kg411T7t9">web 前端开发入门教程，前端零基础 html5+css3+前端项目视频教程</a><br><a href="https://www.bilibili.com/video/BV1xq4y1q7jZ">web 前端进阶教程，前端 html5+css3+移动端项目实战（含华为新闻，b 站移动端等）</a></p><h2 id="第二阶段：技术进阶"><a href="#第二阶段：技术进阶" class="headerlink" title="第二阶段：技术进阶"></a>第二阶段：技术进阶</h2><p><a href="https://www.bilibili.com/video/BV1ux411d75J">JavaScript 全套教程，Web 前端必学的 JS 入门教程，零基础 JavaScript 入门</a><br><a href="https://www.bilibili.com/video/BV1k4411w7sV">JavaScript 核心教程，前端基础教程，JS 必会的 DOM BOM 操作</a><br><a href="https://www.bilibili.com/video/BV1zs411h74a">AJAX 零基础到精通_整合 Git 核心内容全套教程</a></p><h2 id="第三阶段-VUE-开发"><a href="#第三阶段-VUE-开发" class="headerlink" title="第三阶段 VUE 开发"></a>第三阶段 VUE 开发</h2><p><a href="https://www.bilibili.com/video/BV1a34y167AZ">Node.js 全套入门教程，nodejs 最新教程含 es6 模块化+npm+express+webpack+promise 等</a><br><a href="https://www.bilibili.com/video/BV1zq4y1p7ga">Vue 全套视频教程，从 vue2.0 到 vue3.0 一套全覆盖，前端必会的框架教程</a></p><h2 id="第四阶段-React-amp-小程序开发学"><a href="#第四阶段-React-amp-小程序开发学" class="headerlink" title="第四阶段 React&amp;小程序开发学"></a>第四阶段 React&amp;小程序开发学</h2><p><a href="https://www.bilibili.com/video/BV1gh411U7JD">黑马前端 React 精品教程， React 零基础入门到原理详解_哔哩哔哩_bilibili</a><br><a href="https://www.bilibili.com/video/BV1834y1676P">黑马程序员前端微信小程序开发教程，微信小程序从基础到发布全流程_企业级商城实战(含 uni-app 项目多端部署)</a><br>作者：黑马程序员 <a href="https://www.bilibili.com/read/cv10431130?spm_id_from=333.999.0.0">2022 年前端学习路线图</a> 出处：bilibili</p><h2 id="▶-其他前端资源"><a href="#▶-其他前端资源" class="headerlink" title="▶ 其他前端资源"></a>▶ 其他前端资源</h2><p>快速搭建 vue 项目的脚手架<a href="https://cli.vuejs.org/zh/">Vue Cli</a><br>基于 vue 脚手架使用最多的 ui 框架<a href="https://element.eleme.cn/#/zh-CN">Element UI</a></p><h3 id="1-vue-element-admin"><a href="#1-vue-element-admin" class="headerlink" title="1.vue-element-admin"></a>1.vue-element-admin</h3><p><a href="https://github.com/PanJiaChen/vue-element-admin">vue-element-admin</a> 是一个后台前端解决方案，它基于 vue 和 element-ui 实现。它使用了最新的前端技术栈，内置了 i18n 国际化解决方案，动态路由，权限验证，提炼了典型的业务模型，提供了丰富的功能组件，它可以帮助你快速搭建企业级中后台产品原型。相信不管你的需求是什么，本项目都能帮助到你。项目作者还搭配了一些教程文章，很值得看！</p><h3 id="2-blog-vue-typescript"><a href="#2-blog-vue-typescript" class="headerlink" title="2.blog-vue-typescript"></a>2.blog-vue-typescript</h3><p><a href="https://github.com/biaochenxuying/blog-vue-typescript">blog-vue-typescript</a> 是基于 Vue 全家桶 + TypeScript + Element-UI 技术栈的简洁时尚博客网站。TypeScript 具有类型系统，且是 JavaScript 的超集，TypeScript 在 2018 年 势头迅猛，可谓遍地开花。Vue3.0 将使用 TS 重写，重写后的 Vue3.0 将更好的支持 TS。2019 年 TypeScript 将会更加普及，能够熟练掌握 TS，并使用 TS 开发过项目，将更加成为前端开发者的优势。</p><h3 id="3-若依管理系统"><a href="#3-若依管理系统" class="headerlink" title="3.若依管理系统"></a>3.若依管理系统</h3><p><a href="http://www.ruoyi.vip/">若依管理系统</a> 基于 SpringBoot 的权限管理系统</p><p><a href="http://doc.ruoyi.vip/ruoyi-vue/">RuoYi-Vue</a> 是一个 Java EE 企业级快速开发平台，基于经典技术组合（Spring Boot、Spring Security、MyBatis、Jwt、Vue），内置模块如：部门管理、角色用户、菜单及按钮授权、数据权限、系统参数、日志管理、代码生成等。在线定时任务配置；支持集群，支持多数据源，支持分布式事务。</p><h3 id="4-Vue-相关开源项目库汇总"><a href="#4-Vue-相关开源项目库汇总" class="headerlink" title="4.Vue 相关开源项目库汇总"></a>4.Vue 相关开源项目库汇总</h3><p><a href="https://github.com/opendigg/awesome-github-vue">Vue 相关开源汇总</a> 汇总了 vue 相关的很多开源项目，star 数相对较多的；包括 UI 组件、框架爱、工具库等等，推荐看！</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>#vue</tag>
      
      <tag>#element</tag>
      
      <tag>#基础</tag>
      
      <tag>#前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>创建简单的Nodejs服务器</title>
    <link href="/2022/03/04/article/"/>
    <url>/2022/03/04/article/</url>
    
    <content type="html"><![CDATA[<p>1.创建一个 package.json 文件<br>npm init</p><p>2.下载包，–sava 是用来记录并保存下载的包名称在 package.json 文件中<br>npm install 包名称 –save install 可简写成 i<br>如：npm install express –save #可简写形式 npm i express–save<br>在别的地方用安装过得包，只要拷贝 package.json 文件放到要安装的路径下并运行第 1 步</p><p>3.1 express 必须 &#x2F;&#x2F;–sav 是把下载的包名称保存到 package.json 文件中<br>npm install express –save</p><p>3.2 bodyParser 用于解析客户端请求的 body 中的内容,内部使用 JSON 编码处理,url 编码处理以及对于文件的上传处理.<br>npm i body-parser –save</p><p>3.3 mysql 用到数据库下载这个<br>npm install mysql –save</p><p>3.4 cors 跨域<br>npm i cors –save</p><p>下载完成后，在根目录下创建服务器</p><ol><li>创建 server.js 文件<br>server.js 文件代码如下</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 引入结构件</span><br><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>);<br><span class="hljs-keyword">const</span> mysql = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mysql&quot;</span>);<br><span class="hljs-keyword">const</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;body-parser&quot;</span>);<br><span class="hljs-keyword">const</span> cors = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;cors&quot;</span>);<br><br><span class="hljs-comment">// 使用express构建web服务器</span><br><span class="hljs-keyword">var</span> app = <span class="hljs-title function_">express</span>();<br><span class="hljs-keyword">var</span> server = app.<span class="hljs-title function_">listen</span>(<span class="hljs-number">4000</span>,<span class="hljs-function">()=&gt;</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;服务器启动成功,IP地址为:http://localhost:4000&quot;</span>);<br>&#125;);<br><br><span class="hljs-comment">// 配置跨域模块，允许那个地址可以跨域访问</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">cors</span>(&#123;<br><span class="hljs-attr">orign</span>: [<span class="hljs-string">&quot;http://127.0.0.1:8080&quot;</span>,<br><span class="hljs-string">&quot;http://localhost:8080&quot;</span>],<br><span class="hljs-attr">credentials</span>:<span class="hljs-literal">true</span><br>&#125;));<br><br><span class="hljs-comment">// 使用body-parser中间件</span><br>app.<span class="hljs-title function_">use</span>(bodyParser.<span class="hljs-title function_">urlencoded</span>(&#123;<span class="hljs-attr">extended</span>:<span class="hljs-literal">false</span>&#125;));<br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-function">(<span class="hljs-params">req,res</span>)=&gt;</span>&#123;<br>res.<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;服务器启动成功&quot;</span>);<br>&#125;)<br></code></pre></td></tr></table></figure><p>然后在浏览器中访问自己设置的 IP 地址 localhost:4000</p><p><img src="/./images/node-server.png" alt="node服务"></p>]]></content>
    
    
    <categories>
      
      <category>nodejs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>#nodejs</tag>
      
      <tag>#express</tag>
      
      <tag>#后端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/03/03/hello-world/"/>
    <url>/2022/03/03/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>搭建博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
